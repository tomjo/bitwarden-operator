use k8s_openapi::apiextensions_apiserver::pkg::apis::apiextensions::v1::CustomResourceSubresourceStatus;
use kube::{CustomResource, CustomResourceExt};
use schemars::JsonSchema;
use serde::{Deserialize, Serialize};

/// Struct corresponding to the Specification (`spec`) part of the `BitwardenSecret` resource, directly
/// reflects context of the `bitwardensecrets.tomjo.net.yaml` file to be found in this repository.
/// The `BitwardenSecret` struct will be generated by the `CustomResource` derive macro.
#[derive(CustomResource, Serialize, Deserialize, Debug, PartialEq, Clone, JsonSchema)]
#[kube(
group = "tomjo.net",
version = "v1",
kind = "BitwardenSecret",
plural = "bitwardensecrets",
derive = "PartialEq",
status = "BitwardenSecretStatus",
namespaced
)]
pub struct BitwardenSecretSpec {
    #[serde(alias = "type")]
    pub type_: String,
    pub item: String,
}

#[derive(Serialize, Deserialize, Clone, Debug, JsonSchema, PartialEq)]
pub enum BitwardenSecretStatusX {
    Success,
    Failed,
    Progressing,
}

#[derive(Clone, Debug, Deserialize, JsonSchema, Serialize, PartialEq)]
pub struct BitwardenSecretStatus {
    pub status: BitwardenSecretStatusX,
    pub reason: String,
}

